{"version":3,"sources":["../src/mock-client.js"],"names":["args","date","labels","commentDate","getFakePrs","getFakeComments","data","id","created_at","toISOString","body","closingSoonComment","replace","autoCloseAfterWarnSecs","fakePrsArray","fakePrs","setupMocks","client","pulls","list","jest","fn","page","get","update","merge","updateBranch","git","deleteRef","issues","addLabels","createComment","removeLabel","deleteComment","listComments"],"mappings":";;;;;;;AAAA;;AACA;;AAEe,kBAAUA,IAAV,EAAgBC,IAAhB,EAAsBC,MAAtB,EAA8BC,WAA9B,EAA2C;AACxD,OAAKC,UAAL,GAAkBA,sBAAlB;;AACA,OAAKC,eAAL,GAAuB,OAAO;AAC5BC,IAAAA,IAAI,EAAE,CACJ;AACEC,MAAAA,EAAE,EAAE,GADN;AAEEC,MAAAA,UAAU,EAAE,CAACL,WAAW,IAAEF,IAAd,EAAoBQ,WAApB,EAFd;AAGEC,MAAAA,IAAI,EAAEV,IAAI,CAACW,kBAAL,CAAwBC,OAAxB,CACJ,cADI,EAEJ,yBAAYZ,IAAI,CAACa,sBAAjB,CAFI;AAHR,KADI;AADsB,GAAP,CAAvB;;AAYA,OAAKC,YAAL,GAAoB,4BAAWb,IAAX,EAAiBC,MAAjB,CAApB;AACA,OAAKa,OAAL,GAAe,kCAAiB,KAAKD,YAAtB,CAAf;AAEAE,EAAAA,UAAU,CAAC,IAAD,CAAV;AACD;;AAED,MAAMA,UAAU,GAAGC,MAAM,IAAI;AAC3BA,EAAAA,MAAM,CAACC,KAAP,GAAe;AACbC,IAAAA,IAAI,EAAEC,IAAI,CAACC,EAAL,CAAQ,CAAC;AAAEC,MAAAA;AAAF,KAAD,MAAe;AAAEhB,MAAAA,IAAI,EAAEgB,IAAI,IAAI,CAAR,GAAYL,MAAM,CAACH,YAAnB,GAAkC;AAA1C,KAAf,CAAR,CADO;AAEbS,IAAAA,GAAG,EAAEH,IAAI,CAACC,EAAL,EAFQ;AAGbG,IAAAA,MAAM,EAAEJ,IAAI,CAACC,EAAL,EAHK;AAIbI,IAAAA,KAAK,EAAEL,IAAI,CAACC,EAAL,EAJM;AAKbK,IAAAA,YAAY,EAAEN,IAAI,CAACC,EAAL;AALD,GAAf;AAOAJ,EAAAA,MAAM,CAACU,GAAP,GAAa;AACXC,IAAAA,SAAS,EAAER,IAAI,CAACC,EAAL;AADA,GAAb;AAIAJ,EAAAA,MAAM,CAACY,MAAP,GAAgB;AACdC,IAAAA,SAAS,EAAEV,IAAI,CAACC,EAAL,EADG;AAEdU,IAAAA,aAAa,EAAEX,IAAI,CAACC,EAAL,EAFD;AAGdW,IAAAA,WAAW,EAAEZ,IAAI,CAACC,EAAL,EAHC;AAIdY,IAAAA,aAAa,EAAEb,IAAI,CAACC,EAAL,EAJD;AAKda,IAAAA,YAAY,EAAEd,IAAI,CAACC,EAAL,CAAQ,MAAMJ,MAAM,CAACZ,eAAP,EAAd;AALA,GAAhB;AAOAY,EAAAA,MAAM,CAACU,GAAP,GAAa;AACXC,IAAAA,SAAS,EAAER,IAAI,CAACC,EAAL;AADA,GAAb;AAGD,CAtBD","sourcesContent":["import { nowPlusSecs } from './common';\r\nimport { arrayToGenerator, getFakePrs } from './common-test';\r\n\r\nexport default function (args, date, labels, commentDate) {\r\n  this.getFakePrs = getFakePrs;\r\n  this.getFakeComments = () => ({\r\n    data: [\r\n      {\r\n        id: 321,\r\n        created_at: (commentDate||date).toISOString(),\r\n        body: args.closingSoonComment.replace(\r\n          /\\@closeTime/g,\r\n          nowPlusSecs(args.autoCloseAfterWarnSecs),\r\n        ),\r\n      },\r\n    ],\r\n  });\r\n  this.fakePrsArray = getFakePrs(date, labels);\r\n  this.fakePrs = arrayToGenerator(this.fakePrsArray);\r\n\r\n  setupMocks(this);\r\n}\r\n\r\nconst setupMocks = client => {\r\n  client.pulls = {\r\n    list: jest.fn(({ page }) => ({ data: page == 1 ? client.fakePrsArray : [] })),\r\n    get: jest.fn(),\r\n    update: jest.fn(),\r\n    merge: jest.fn(),\r\n    updateBranch: jest.fn(),\r\n  };\r\n  client.git = {\r\n    deleteRef: jest.fn(),\r\n  };\r\n\r\n  client.issues = {\r\n    addLabels: jest.fn(),\r\n    createComment: jest.fn(),\r\n    removeLabel: jest.fn(),\r\n    deleteComment: jest.fn(),\r\n    listComments: jest.fn(() => client.getFakeComments()),\r\n  };\r\n  client.git = {\r\n    deleteRef: jest.fn(),\r\n  };\r\n};\r\n"],"file":"mock-client.js"}