{"version":3,"sources":["../../src/actions/merge-prs.js"],"names":["merge","client","context","pr","pulls","repo","pull_number","number","isMergable","fullPr","get","data","mergeable","mergeable_state","opts","prs","logger","filtered","p","labels","args","autoMergeLabel","processedPrNumbers","info","deleteOnMerge","push","length"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEA,MAAMA,KAAK,GAAG,OAAO;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAP,EAA4BC,EAA5B,KACZ,MAAMF,MAAM,CAACG,KAAP,CAAaJ,KAAb,CAAmB,EACvB,GAAGE,OAAO,CAACG,IADY;AAEvBC,EAAAA,WAAW,EAAEH,EAAE,CAACI;AAFO,CAAnB,CADR;;AAMA,MAAMC,UAAU,GAAG,OAAO;AAAEP,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAP,EAA4BC,EAA5B,KAAmC;AACpD,QAAMM,MAAM,GAAG,MAAMR,MAAM,CAACG,KAAP,CAAaM,GAAb,CAAiB,EACpC,GAAGR,OAAO,CAACG,IADyB;AAEpCC,IAAAA,WAAW,EAAEH,EAAE,CAACI;AAFoB,GAAjB,CAArB;AAIA,SACEE,MAAM,CAACE,IAAP,CAAYC,SAAZ,KACCH,MAAM,CAACE,IAAP,CAAYE,eAAZ,KAAgC,OAAhC,IACGJ,MAAM,CAACE,IAAP,CAAYE,eAAZ,KAAgC,UAFpC,CADF,CAGkD;AAHlD;AAKD,CAVD;;eAYeC,IAAI,IAAI,MAAMC,GAAN,IAAa;AAClC,QAAM;AAAEC,IAAAA;AAAF,MAAaF,IAAnB;AACA,QAAMG,QAAQ,GAAG,qBAAOF,GAAP,EAAYG,CAAC,IAAIA,CAAC,CAACC,MAAF,IAAY,sBAASD,CAAT,EAAYJ,IAAI,CAACM,IAAL,CAAUC,cAAtB,CAA7B,CAAjB;AACA,QAAMC,kBAAkB,GAAG,EAA3B;;AACA,aAAW,IAAInB,EAAf,IAAqBc,QAArB,EAA+B;AAC7B,QAAI,MAAMT,UAAU,CAACM,IAAD,EAAOX,EAAP,CAApB,EAAgC;AAC9Ba,MAAAA,MAAM,CAACO,IAAP,CAAa,WAAU,wBAAWpB,EAAX,CAAe,EAAtC;AACA,YAAMH,KAAK,CAACc,IAAD,EAAOX,EAAP,CAAX;;AACA,UAAIW,IAAI,CAACM,IAAL,CAAUI,aAAd,EAA6B;AAC3B,cAAM,4BAAeV,IAAf,EAAqBX,EAArB,CAAN;AACD;;AACDmB,MAAAA,kBAAkB,CAACG,IAAnB,CAAwBtB,EAAE,CAACI,MAA3B;AACD;AACF;;AACDS,EAAAA,MAAM,CAACO,IAAP,CAAa,UAASD,kBAAkB,CAACI,MAAO,MAAhD;AACA,SAAOJ,kBAAP;AACD,C","sourcesContent":["import filter from '@async-generators/filter';\r\nimport { hasLabel, describePr, deletePrBranch } from '../common';\r\n\r\nconst merge = async ({ client, context }, pr) =>\r\n  await client.pulls.merge({\r\n    ...context.repo,\r\n    pull_number: pr.number,\r\n  });\r\n\r\nconst isMergable = async ({ client, context }, pr) => {\r\n  const fullPr = await client.pulls.get({\r\n    ...context.repo,\r\n    pull_number: pr.number,\r\n  });\r\n  return (\r\n    fullPr.data.mergeable &&\r\n    (fullPr.data.mergeable_state === 'clean'\r\n     || fullPr.data.mergeable_state === 'unstable') // this means that non required builds are failing\r\n  );\r\n};\r\n\r\nexport default opts => async prs => {\r\n  const { logger } = opts;\r\n  const filtered = filter(prs, p => p.labels && hasLabel(p, opts.args.autoMergeLabel));\r\n  const processedPrNumbers = [];\r\n  for await (let pr of filtered) {\r\n    if (await isMergable(opts, pr)) {\r\n      logger.info(`Merging ${describePr(pr)}`);\r\n      await merge(opts, pr);\r\n      if (opts.args.deleteOnMerge) {\r\n        await deletePrBranch(opts, pr);\r\n      }\r\n      processedPrNumbers.push(pr.number);\r\n    }\r\n  }\r\n  logger.info(`Merged ${processedPrNumbers.length} PRs`);\r\n  return processedPrNumbers;\r\n};\r\n"],"file":"merge-prs.js"}