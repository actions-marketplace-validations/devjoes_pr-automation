{"version":3,"sources":["../../src/actions/get-prs.js"],"names":["client","context","logger","args","prs","page","info","repo","owner","pulls","list","state","per_page","data","length","debug","i","pr","headOk","branchBlackListLowerCase","indexOf","head","ref","baseOk","base","warning"],"mappings":";;;;;;;AAAA;;eAEe,CAAC;AAAEA,EAAAA,MAAF;AAAUC,EAAAA,OAAV;AAAmBC,EAAAA,MAAnB;AAA2BC,EAAAA;AAA3B,CAAD,KACb,mBAAmB;AACjB,MAAIC,GAAG,GAAG,EAAV;AACA,MAAIC,IAAI,GAAG,CAAX;AACAH,EAAAA,MAAM,CAACI,IAAP,CAAa,6BAA4BL,OAAO,CAACM,IAAR,CAAaC,KAAM,IAAGP,OAAO,CAACM,IAAR,CAAaA,IAAK,EAAjF;;AACA,KAAG;AACDF,IAAAA,IAAI;AACJD,IAAAA,GAAG,GAAG,MAAMJ,MAAM,CAACS,KAAP,CAAaC,IAAb,CAAkB;AAC5BF,MAAAA,KAAK,EAAEP,OAAO,CAACM,IAAR,CAAaC,KADQ;AAE5BD,MAAAA,IAAI,EAAEN,OAAO,CAACM,IAAR,CAAaA,IAFS;AAG5BI,MAAAA,KAAK,EAAE,MAHqB;AAI5BC,MAAAA,QAAQ,EAAE,GAJkB;AAK5BP,MAAAA,IAAI,EAAEA;AALsB,KAAlB,CAAZ;;AAOA,QAAID,GAAG,CAACS,IAAJ,CAASC,MAAb,EAAqB;AACnBZ,MAAAA,MAAM,CAACa,KAAP,CAAc,YAAWV,IAAK,KAAID,GAAG,CAACS,IAAJ,CAASC,MAAO,OAAlD;AACD;;AACD,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,GAAG,CAACS,IAAJ,CAASC,MAA7B,EAAqCE,CAAC,EAAtC,EAA0C;AACxC,YAAMC,EAAE,GAAGb,GAAG,CAACS,IAAJ,CAASG,CAAT,CAAX;AACA,YAAME,MAAM,GAAGf,IAAI,CAACgB,wBAAL,CAA8BC,OAA9B,CAAsC,+BAAkBH,EAAE,CAACI,IAAH,CAAQC,GAA1B,CAAtC,MAA0E,CAAC,CAA1F;AACA,YAAMC,MAAM,GAAGpB,IAAI,CAACgB,wBAAL,CAA8BC,OAA9B,CAAsC,+BAAkBH,EAAE,CAACO,IAAH,CAAQF,GAA1B,CAAtC,MAA0E,CAAC,CAA1F;;AACA,UAAIJ,MAAM,IAAIK,MAAd,EAAsB;AACpB,cAAMN,EAAN;AACD,OAFD,MAEO;AACLf,QAAAA,MAAM,CAACuB,OAAP,CACG,sBAAqB,wBAAWR,EAAX,CAAe,gBACnCC,MAAM,GAAG,EAAH,GAAS,UAASD,EAAE,CAACI,IAAH,CAAQC,GAAI,GACrC,GAAEC,MAAM,GAAG,EAAH,GAAS,UAASN,EAAE,CAACO,IAAH,CAAQF,GAAI,GAAG,iBAH5C;AAKD;AACF;AACF,GA1BD,QA0BSlB,GAAG,CAACS,IAAJ,CAASC,MAAT,IAAmBT,IAAI,GAAG,IA1BnC;AA2BD,C","sourcesContent":["import { describePr, branchNameFromRef } from '../common';\r\n\r\nexport default ({ client, context, logger, args }) =>\r\n  async function* () {\r\n    let prs = [];\r\n    let page = 0;\r\n    logger.info(`Getting PRs in repository ${context.repo.owner}/${context.repo.repo}`);\r\n    do {\r\n      page++;\r\n      prs = await client.pulls.list({\r\n        owner: context.repo.owner,\r\n        repo: context.repo.repo,\r\n        state: 'open',\r\n        per_page: 100,\r\n        page: page,\r\n      });\r\n      if (prs.data.length) {\r\n        logger.debug(`Got page ${page} (${prs.data.length} PRs)`);\r\n      }\r\n      for (let i = 0; i < prs.data.length; i++) {\r\n        const pr = prs.data[i];\r\n        const headOk = args.branchBlackListLowerCase.indexOf(branchNameFromRef(pr.head.ref)) === -1;\r\n        const baseOk = args.branchBlackListLowerCase.indexOf(branchNameFromRef(pr.base.ref)) === -1;\r\n        if (headOk && baseOk) {\r\n          yield pr;\r\n        } else {\r\n          logger.warning(\r\n            `Refused to process ${describePr(pr)} the branch's${\r\n              headOk ? '' : ` HEAD (${pr.head.ref})`\r\n            }${baseOk ? '' : ` BASE (${pr.base.ref})`} is blacklisted`,\r\n          );\r\n        }\r\n      }\r\n    } while (prs.data.length && page < 1000);\r\n  };\r\n"],"file":"get-prs.js"}