{"version":3,"sources":["../../src/actions/update-prs.js"],"names":["update","client","context","pr","pulls","updateBranch","repo","pull_number","number","needsUpdate","fullPr","get","data","mergeable_state","opts","prs","logger","filtered","p","labels","args","autoMergeLabel","processedPrNumbers","debug","head","ref","base","push","info","length"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEA,MAAMA,MAAM,GAAG,OAAO;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAP,EAA4BC,EAA5B,KACb,MAAMF,MAAM,CAACG,KAAP,CAAaC,YAAb,CAA0B,EAC9B,GAAGH,OAAO,CAACI,IADmB;AAE9BC,EAAAA,WAAW,EAAEJ,EAAE,CAACK;AAFc,CAA1B,CADR;;AAMA,MAAMC,WAAW,GAAG,OAAO;AAAER,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAP,EAA4BC,EAA5B,KAAmC;AACrD,QAAMO,MAAM,GAAG,MAAMT,MAAM,CAACG,KAAP,CAAaO,GAAb,CAAiB,EACpC,GAAGT,OAAO,CAACI,IADyB;AAEpCC,IAAAA,WAAW,EAAEJ,EAAE,CAACK;AAFoB,GAAjB,CAArB;AAIA,SAAOE,MAAM,CAACE,IAAP,CAAYC,eAAZ,KAAgC,QAAvC;AACD,CAND;;eAQeC,IAAI,IAAI,MAAMC,GAAN,IAAa;AAClC,QAAM;AAAEC,IAAAA;AAAF,MAAaF,IAAnB;AACA,QAAMG,QAAQ,GAAG,qBAAOF,GAAP,EAAYG,CAAC,IAAIA,CAAC,CAACC,MAAF,IAAY,sBAASD,CAAT,EAAYJ,IAAI,CAACM,IAAL,CAAUC,cAAtB,CAA7B,CAAjB;AACA,QAAMC,kBAAkB,GAAG,EAA3B;;AAEA,aAAW,IAAInB,EAAf,IAAqBc,QAArB,EAA+B;AAC7B,QAAI,MAAMR,WAAW,CAACK,IAAD,EAAOX,EAAP,CAArB,EAAiC;AAC/Ba,MAAAA,MAAM,CAACO,KAAP,CAAc,cAAapB,EAAE,CAACK,MAAO,YAAWL,EAAE,CAACqB,IAAH,CAAQC,GAAI,eAActB,EAAE,CAACuB,IAAH,CAAQD,GAAI,EAAtF;AACA,YAAMzB,MAAM,CAACc,IAAD,EAAOX,EAAP,CAAZ;AACAmB,MAAAA,kBAAkB,CAACK,IAAnB,CAAwBxB,EAAE,CAACK,MAA3B;AACD;AACF;;AACDQ,EAAAA,MAAM,CAACY,IAAP,CAAa,wBAAuBN,kBAAkB,CAACO,MAAO,+BAA9D;AACA,SAAOP,kBAAP;AACD,C","sourcesContent":["import filter from '@async-generators/filter';\r\nimport { hasLabel } from '../common';\r\n\r\nconst update = async ({ client, context }, pr) =>\r\n  await client.pulls.updateBranch({\r\n    ...context.repo,\r\n    pull_number: pr.number,\r\n  });\r\n\r\nconst needsUpdate = async ({ client, context }, pr) => {\r\n  const fullPr = await client.pulls.get({\r\n    ...context.repo,\r\n    pull_number: pr.number,\r\n  });\r\n  return fullPr.data.mergeable_state === 'behind';\r\n};\r\n\r\nexport default opts => async prs => {\r\n  const { logger } = opts;\r\n  const filtered = filter(prs, p => p.labels && hasLabel(p, opts.args.autoMergeLabel));\r\n  const processedPrNumbers = [];\r\n\r\n  for await (let pr of filtered) {\r\n    if (await needsUpdate(opts, pr)) {\r\n      logger.debug(`Updated PR ${pr.number} (branch ${pr.head.ref}) from base ${pr.base.ref}`);\r\n      await update(opts, pr);\r\n      processedPrNumbers.push(pr.number);\r\n    }\r\n  }\r\n  logger.info(`Merged changes in to ${processedPrNumbers.length} PRs from their base branches`);\r\n  return processedPrNumbers;\r\n};\r\n"],"file":"update-prs.js"}