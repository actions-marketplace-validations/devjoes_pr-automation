{"version":3,"sources":["../src/common-test.js"],"names":["args","autoCloseLabel","autoMergeLabel","warnClosingAfterSecs","autoCloseAfterWarnSecs","closingSoonComment","closingSoonLabel","deleteOnMerge","deleteOnClose","branchBlackListLowerCase","context","repo","owner","yesterday","d","Date","setDate","getDate","fnAssert","fn","props","invert","expect","not","toBeCalledWith","objectContaining","generatorToArray","gen","arr","i","push","arrayToGenerator","length","getFakePrs","date","labels","url","id","number","state","title","body","created_at","updated_at","closed_at","merged_at","merge_commit_sha","assignee","assignees","requested_reviewers","requested_teams","map","name","milestone","draft","base","label","ref","sha","_links","author_association","head","logInfoNotErrors","logger","debug","info","jest","spyOn","warning","error","assert","toBeCalled"],"mappings":"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","sourcesContent":["import getLogger from './logger';\r\n\r\nexport const args = {\r\n  autoCloseLabel: 'automated-pr',\r\n  autoMergeLabel: 'auto-merge',\r\n  warnClosingAfterSecs: 60 * 60 * 3,\r\n  autoCloseAfterWarnSecs: 60 * 60 * 6,\r\n  closingSoonComment: 'This pull request is inactive and will be closed at @closeTime',\r\n  closingSoonLabel: 'closing-soon',\r\n  deleteOnMerge: false,\r\n  deleteOnClose: false,\r\n  branchBlackListLowerCase: ['master']\r\n};\r\n\r\nexport const context = {\r\n  repo: {\r\n    owner: 'AcmeSoftwareCo',\r\n    repo: 'test-repo',\r\n  },\r\n};\r\nexport const yesterday = () => {\r\n  const d = new Date();\r\n  d.setDate(d.getDate() - 1);\r\n  return d;\r\n};\r\n\r\nexport const fnAssert = (fn, props, invert) =>\r\n  (invert ? expect(fn).not : expect(fn)).toBeCalledWith(\r\n    expect.objectContaining({\r\n      ...context.repo,\r\n      ...(props || {}),\r\n    }),\r\n  );\r\n\r\nexport const generatorToArray = async gen => {\r\n  const arr = [];\r\n  for await (let i of gen) {\r\n    arr.push(i);\r\n  }\r\n  return arr;\r\n};\r\n\r\nexport async function* arrayToGenerator(arr) {\r\n  for (let i = 0; i < arr.length; i++) {\r\n    yield arr[i];\r\n  }\r\n}\r\n\r\nexport const getFakePrs = (date, labels) => [\r\n  {\r\n    url: 'https://api.github.com/repos/TestOrg/TestApp/pulls/123',\r\n    id: 123456789,\r\n    number: 123,\r\n    state: 'open',\r\n    title: 'Test PR',\r\n    body: 'test',\r\n    created_at: date,\r\n    updated_at: date,\r\n    closed_at: null,\r\n    merged_at: null,\r\n    merge_commit_sha: 'c1eb94186b1e0ee36d84a3ab97636455b9b62db8',\r\n    assignee: null,\r\n    assignees: [],\r\n    requested_reviewers: [],\r\n    requested_teams: [],\r\n    labels: labels.map(name => ({ name })),\r\n    milestone: null,\r\n    draft: false,\r\n    base: {\r\n      label: 'TestOrg:test',\r\n      ref: 'test',\r\n      sha: '1fc9196bb7e56d0b0869035e77fcaf397d70d537',\r\n    },\r\n    _links: {},\r\n    author_association: 'COLLABORATOR',\r\n    head: {\r\n      ref: 'testpr',\r\n    },\r\n  },\r\n];\r\n\r\nexport const logInfoNotErrors = () => {\r\n  const logger = getLogger(true);\r\n  logger.debug = () => {};\r\n  logger.info = () => {};\r\n  const info = jest.spyOn(logger, 'info');\r\n  const warning = jest.spyOn(logger, 'warning');\r\n  const error = jest.spyOn(logger, 'error');\r\n  logger.assert = () => {\r\n    expect(info).toBeCalled();\r\n    expect(warning).not.toBeCalled();\r\n    expect(error).not.toBeCalled();\r\n  };\r\n  return logger;\r\n};\r\n"],"file":"common-test.js"}